var CAR_PIN_CONTANTS="#include <Servo.h> \nServo myservo;\nint L298Ninput1 = 5;\nint L298Ninput2 = 7;\nint L298Ninput3 = 8;\nint L298Ninput4 = 6;\nint L298NAenable = 9;\nint L298NBenable = 10;\nbool runOnce = true;\nint echoPin = 2; \nint trigPin = 12;\nint penPin = 3;",CAR_PINS_SETUP="pinMode(L298Ninput1, OUTPUT);\npinMode(L298Ninput4, OUTPUT);\npinMode(L298Ninput2, OUTPUT);\npinMode(L298Ninput3, OUTPUT);\npinMode(L298NAenable, OUTPUT);\npinMode(L298NBenable, OUTPUT);\n  pinMode(trigPin, OUTPUT); \n  pinMode(echoPin, INPUT);\n    myservo.attach(penPin);",FLUSH_ALL_PINS="digitalWrite(L298Ninput1,LOW);\n        digitalWrite(L298Ninput2,LOW);\n        digitalWrite(L298Ninput3, LOW);\n        digitalWrite(L298Ninput4, LOW);\n        digitalWrite(L298NAenable, LOW);        \n        digitalWrite(L298NBenable, LOW);",RUN_MOTOR_FOR_POWER_AND_TIME_FUNCTION="void runMotorPowerTime(bool isLeft, bool isForward, int powerPerPercent, int time){\nif(isForward && isLeft){\n        digitalWrite(L298Ninput1,LOW);\n        digitalWrite(L298Ninput2, HIGH);\n        analogWrite(L298NAenable, powerPerPercent * 2.5);\n        delay(time);\n    }\nelse if (!isForward && isLeft){\n        digitalWrite(L298Ninput1,HIGH);\n        digitalWrite(L298Ninput2, LOW);\n        analogWrite(L298NAenable, powerPerPercent * 2.5);\n        delay(time);\n}\nelse if (isForward && !isLeft){\n        digitalWrite(L298Ninput3,LOW);\n        digitalWrite(L298Ninput4, HIGH);\n        analogWrite(L298NBenable, powerPerPercent * 2.5);\n        delay(time);\n}\nelse if (!isForward && !isLeft){\n        digitalWrite(L298Ninput3,HIGH);\n        digitalWrite(L298Ninput4, LOW);\n        analogWrite(L298NBenable, powerPerPercent * 2.5);\n        delay(time);\n}\n}",RUN_MOTOR_FOR_DISTANCE_AND_POWER_FUNCTION="void runMotorDistancePower(bool isLeft, bool isForward, int powerPerPercent, int distance){}",RUN_BOTH_MOTORS_FOR_POWER_AND_TIME_FUNCTION="void runBothMotorsPowerTime(bool isForward, int powerPerPercent, int time){\nif(isForward){\n        digitalWrite(L298Ninput1,LOW);\n        digitalWrite(L298Ninput2, HIGH);\n        analogWrite(L298NAenable, powerPerPercent * 2.5);\n        digitalWrite(L298Ninput3,LOW);\n        digitalWrite(L298Ninput4, HIGH);\n        analogWrite(L298NBenable, powerPerPercent * 2.5);\n        delay(time);\n    }\nelse if (!isForward){\n        digitalWrite(L298Ninput1,HIGH);\n        digitalWrite(L298Ninput2, LOW);\n        analogWrite(L298NAenable, powerPerPercent * 2.5);\n        digitalWrite(L298Ninput3,HIGH);\n        digitalWrite(L298Ninput4, LOW);\n        analogWrite(L298NBenable, powerPerPercent * 2.5);\n        delay(time);\n}\n}",RUN_BOTH_MOTORS_FOR_DISTANCE_AND_POWER_FUNCTION="void runBothMotorsDistancePower(bool isForward, int powerPerPercent, int distance){\nif(isForward){\n        digitalWrite(L298Ninput1,LOW);\n        digitalWrite(L298Ninput2, HIGH);\n        analogWrite(L298NAenable, powerPerPercent * 2.5);\n        digitalWrite(L298Ninput3,LOW);\n        digitalWrite(L298Ninput4, HIGH);\n        analogWrite(L298NBenable, powerPerPercent * 2.5);\n        delay(1000);\n    }\nelse if (!isForward){\n        digitalWrite(L298Ninput1,HIGH);\n        digitalWrite(L298Ninput2, LOW);\n        analogWrite(L298NAenable, powerPerPercent * 2.5);\n        digitalWrite(L298Ninput3,HIGH);\n        digitalWrite(L298Ninput4, LOW);\n        analogWrite(L298NBenable, powerPerPercent * 2.5);\n        delay(time);\n}\n}",TURN_N_GRAD_FUNCTION="void turn(int grad){\n    if(grad > 0){\n        digitalWrite(L298Ninput1,HIGH);\n        analogWrite(L298NAenable, 100);\n        digitalWrite(L298Ninput2,LOW);\n        delay((grad / 90) * 475);\n    }\n    else{\n        digitalWrite(L298Ninput3,HIGH);\n        analogWrite(L298NBenable, 100);\n        digitalWrite(L298Ninput4,LOW);\n        delay((abs(grad) / 90) * 475);\n    }\n    }",STOP_ALL_MOTORS_FUNCTION="void stopAllMotors(){}",STOP_SELECTED_MOTOR_FUNCTION="void stopSelectedMotor(bool isLeft){}",CHECK_IF_BARRIER_IS_CLOSE_THAN_N_SM_THEN_TURN_K_GRAD_FUNCTION="void checkIfBarrierIsCloseThanNSmThenTurnKGrad(int distance, int grad){\n int duration, cm; \n  digitalWrite(trigPin, LOW); \n  delayMicroseconds(2); \n  digitalWrite(trigPin, HIGH); \n  delayMicroseconds(10); \n  digitalWrite(trigPin, LOW); \n  duration = pulseIn(echoPin, HIGH); \n  cm = duration / 58;\n  if (cm < distance && grad > 0){\n        digitalWrite(L298Ninput1,HIGH);\n        analogWrite(L298NAenable, 150);\n        digitalWrite(L298Ninput2,LOW);\n        delay(20);\n        delay((grad / 90) * 475);}\n  if (cm < distance && grad < 0){\n        digitalWrite(L298Ninput3,HIGH);\n        analogWrite(L298NBenable, 100);\n        digitalWrite(L298Ninput4,LOW);\n        delay(20);\n        delay((abs(grad) / 90) * 475);\n        }}",PEN_UP="void penUp(){  myservo.write(75);  \n  delay(2000);}",PEN_DOWN="void penDown(){  myservo.write(0);  \n  delay(2000);}";